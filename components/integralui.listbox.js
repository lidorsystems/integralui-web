/*
  filename: integralui.listbox.js
  version : 23.2.0
  Copyright Â© 2016-2023 Lidor Systems. All rights reserved.

  This file is part of the "IntegralUI Web" Library. 
                                                                   
  The contents of this file are subject to the IntegralUI Web License, and may not be used except in compliance with the License.
  A copy of the License should have been installed in the product's root installation directory or it can be found at
  http://www.lidorsystems.com/products/web/studio/license-agreement.aspx.
                                                            
  This SOFTWARE is provided "AS IS", WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for the specific language 
  governing rights and limitations under the License. Any infringement will be prosecuted under applicable laws.                           
*/
import{c as css,h as html}from"../external/lit-element.js";import{c as classMap}from"../external/class-map.js";import{s as styleMap}from"../external/style-map.js";import IntegralUIBaseList from"./integralui.base.list.js";import"./integralui.scrollbar.js";import{IntegralUIColorScheme,IntegralUIComponentAppearance,IntegralUITheme}from"./integralui.enums.js";import{iuiBaseDefaultStyle}from"../styles/default/integralui.style.js";import{iuiDarkStyle}from"../styles/color-schemes/dark/integralui.dark.js";import{iuiLightStyle}from"../styles/color-schemes/light/integralui.light.js";import{iuiListBoxDefaultStyle}from"../styles/default/integralui.listbox.style.js";import{iuiListBoxOfficeStyle}from"../styles/themes/office/integralui.listbox.office.js";import{iuiListBoxDarkStyle}from"../styles/color-schemes/dark/integralui.listbox.dark.js";import{iuiListBoxLightStyle}from"../styles/color-schemes/light/integralui.listbox.light.js";import{iuiListItemDefaultStyle}from"../styles/default/integralui.listitem.style.js";import{iuiListItemOfficeStyle}from"../styles/themes/office/integralui.listitem.office.js";import{iuiListItemDarkStyle}from"../styles/color-schemes/dark/integralui.listitem.dark.js";import{iuiListItemLightStyle}from"../styles/color-schemes/light/integralui.listitem.light.js";import{iuiScrollBarStyle}from"../styles/default/integralui.scrollbar.style.js";import{iuiScrollBarOfficeStyle}from"../styles/themes/office/integralui.scrollbar.office.js";import{iuiScrollBarDarkStyle}from"../styles/color-schemes/dark/integralui.scrollbar.dark.js";import{iuiScrollBarLightStyle}from"../styles/color-schemes/light/integralui.scrollbar.light.js";class IntegralUIListBox extends IntegralUIBaseList{_init(){super._init();this._isAutoExpanded=!0;this._isExpandBoxVisible=!0;this._isGroupingEnabled=!1;this._currentBaseColorSchemeSettings=css``;this._currentBaseStyleSettings=iuiBaseDefaultStyle;this._currentControlStyleSettings=iuiListBoxDefaultStyle;this._currentItemColorSchemeSettings=css``;this._currentItemStyleSettings=iuiListItemDefaultStyle;this._currentItemThemeSettings=css``;this._currentScrollColorSchemeSettings=css``;this._currentScrollStyleSettings=iuiScrollBarStyle;this._generalClassName="iui-listbox";this._groupClassName="iui-listgroup";this._groupContentClassName=this._groupClassName+"-content";this._expandBoxClassName=this._groupClassName+"-expand-box";this._itemClassName="iui-listitem";this._itemContentClassName=this._itemClassName+"-content";this._updateOptions();this._initStyle();this._updateData();this._resizeObserver=new ResizeObserver(t=>{if(t&&t.length>0&&t[0].contentRect){let t=!1;if(this._elemRef)this._clientRect={width:this._elemRef.clientWidth,height:this._elemRef.clientHeight-this._groupPanelHeight-this._paginatorHeight};if(this._clientRect.width!==this._prevClientRect.width){this._prevClientRect.width=this._clientRect.width;t=!0}if(this._clientRect.height!==this._prevClientRect.height){this._prevClientRect.height=this._clientRect.height;t=!0}if(t)this._updateScrollLayout()}})}connectedCallback(){super.connectedCallback()}disconnectedCallback(){super.disconnectedCallback();if(this._resizeObserver)this._resizeObserver.disconnect();this._resizeObserver=null;this._removeDropMark();if(this._updateTimer)clearTimeout(this._updateTimer);this._rt()}attributeChangedCallback(t,e,i){super.attributeChangedCallback(t,e,i)}static get properties(){return{defaultGroupName:{type:String,attribute:"default-group-name",reflect:!0},groups:{type:Array},showExpandBox:{type:Boolean,attribute:"show-expandbox",reflect:!0},showGroups:{type:Boolean,attribute:"show-groups",reflect:!0}}}get defaultGroupName(){return this._currentDefaultGroupName}set defaultGroupName(t){if(this._currentDefaultGroupName!==t){const e=this._currentDefaultGroupName;this._currentDefaultGroupName=t;this.requestUpdate("defaultGroupName",e);this.updateLayout()}}get groups(){return this._dataGroups}set groups(t){if(t&&Array.isArray(t)){const e=this._dataGroups;this._dataGroups=t.concat({name:this._currentDefaultGroupName});this.requestUpdate("groups",e)}}get showExpandBox(){return this._isExpandBoxVisible}set showExpandBox(t){if(this._isExpandBoxVisible!==t){const e=this._isExpandBoxVisible;this._isExpandBoxVisible=t;this.requestUpdate("showExpandBox",e);this.updateLayout()}}get showGroups(){return this._isGroupingEnabled}set showGroups(t){if(this._isGroupingEnabled!==t){const e=this._isGroupingEnabled;this._isGroupingEnabled=t;this.requestUpdate("showGroups",e);this.updateLayout()}}_addItemToCurrentList(t,e){t.type=e?"group":"item";if(!t[this._options.dataFields.id])t[this._options.dataFields.id]=this._commonService.getUniqueId();if(e?!0:this._isItemAllowed(t))this._currentList.push({data:t})}loadData(t,e){this._processLoadData(t,null,e)}_updateCurrentList(){this._currentList.length=0;this._currentGroupList.length=0;let t=this._dataService.getList();if(t){this._applySorting(t);if(this._isGroupingEnabled){this._dataGroups.forEach(t=>{if(this._commonService.isObject(t))this._currentGroupList.push(t);else this._currentGroupList.push({name:t})});this._applySorting(this._currentGroupList);let e=[];this._currentGroupList.filter(t=>this._isGroupAllowed(t)&&t[this._options.dataFields.name]!==this._currentDefaultGroupName).forEach(i=>{if((e=t.filter(t=>t[this._options.dataFields.group]===i[this._options.dataFields.name])).length>0){this._addItemToCurrentList(i,!0);if(this.isItemExpanded(i))e.map(t=>this._addItemToCurrentList(t))}});if((e=this._currentGroupList.filter(t=>t[this._options.dataFields.name]===this._currentDefaultGroupName)).length>0){let i=e[0];if((e=t.filter(t=>void 0===t[this._options.dataFields.group])).length>0){this._addItemToCurrentList(i,!0);if(this.isItemExpanded(i))e.map(t=>this._addItemToCurrentList(t))}}}else t.map(t=>this._addItemToCurrentList(t))}}_updateScrollItemList(t){this._resetScrollItemList();this._scrollItemList.length=0;this.update();let e={x:this._ctrlPadding.left,y:this._ctrlPadding.top},i=1,s=this._currentIndex,l=0;for(;s+l<this._currentList.length&&s<this._currentIndex+this._visibleRange;){let r=this._currentList[s+l];if(!this._isItemDragged(r.data)){if(t&&r.data===t)e.y+=this._dragListSize.height;let l={clickPos:{x:0,y:0},data:r.data,index:s-this._currentIndex,inlineStyle:this._getItemInlineStyle(r),position:{x:this._ctrlPadding.left,y:this._ctrlPadding.top-this._currentItemSize.height},size:{width:0,height:this._currentItemSize.height},targetPosition:{x:e.x,y:e.y},style:{},tabIndex:i};if(this._isAnimationActive)l.position={x:this._ctrlPadding.left,y:this._ctrlPadding.top-this._currentItemSize.height};else l.position={x:l.targetPosition.x,y:l.targetPosition.y};this._updateItemStyle(l);this._scrollItemList.push(l);e.y+=this._currentItemSize.height;s++;i++}else l++}}_expandBoxMouseDown(t,e){if(this._isEnabled&&1===t.which)this.toggle(e);t.stopPropagation()}_expandBoxTouchStart(t,e){if(this._isEnabled)this.toggle(e);t.stopPropagation()}collapse(t){this.toggle(t,!1)}expand(t){this.toggle(t,!0)}toggle(t,e){if(t){if(e&&!1!==t[this._options.dataFields.expanded])return;else if(!1===e&&!1===t[this._options.dataFields.expanded])return;let i=void 0!==e?e:!1!==t[this._options.dataFields.expanded]?!0:!1,s=void 0!==e?e:!i;if(s!==t[this._options.dataFields.expanded]){t[this._options.dataFields.expanded]=s;this._updateCurrentLayout(!1)}}else{this._currentGroupList.forEach(t=>t[this._options.dataFields.expanded]=e);this._updateCurrentLayout(!1)}this.update()}_updateBlockSize(){this._blockSize={width:this._contentElem.offsetWidth,height:this._contentElem.offsetHeight}}_getContentSize(){return this._contentElem?{width:this._contentElem.offsetWidth,height:this._contentElem.offsetHeight}:{width:0,height:0}}_processUpdateLayout(){let t=this;return new Promise(e=>{if(t._isUpdateAllowed){t._resetLayoutTimer();t.updateTimer=setTimeout(function(){t._updateCurrentList();t.updateFullList();t._ctrlPadding=t._commonService.getPadding(t._elemRef);t._clientRect={width:t._elemRef.clientWidth-(t._ctrlPadding.left+t._ctrlPadding.right),height:t._elemRef.clientHeight-(t._ctrlPadding.top+t._ctrlPadding.bottom)};t._isScrollListInit=!0;t._updateScrollItemList();t.update();t._isScrollListInit=!1;setTimeout(function(){t._updateItemElems();t._updateBlockSize();t._avgItemHeight=0;let i=t._getItemElemList();if(i&&i.length>0){let e=0;for(let t=0;t<i.length;t++)e+=i[t].offsetHeight;t._avgItemHeight=Math.floor(e/i.length)}t._updateScrollSize();t._updateVisibleRange();t._updateScrollItemList();t.refresh();t._currentItemSize={width:t._contentSize.width,height:t._avgItemHeight};t._updateItemElems();e()},1);clearTimeout(t.updateTimer)},1)}})}_updateCurrentLayout(t){let e=this;if(e._isUpdateAllowed){e._resetLayoutTimer();e._updateCurrentList();e._updateScrollItemList();e._updateScrollSize();e._updateTimer=setTimeout(function(){e._updateBlockSize();e.update();e._updateItemElems();e._updateHoverContentPos();e._updateSelectContentPos();e.update();clearTimeout(e._updateTimer)},1)}}_updateScrollLayout(){this._clientRect={width:this._elemRef.clientWidth-(this._ctrlPadding.left+this._ctrlPadding.right),height:this._elemRef.clientHeight-(this._ctrlPadding.top+this._ctrlPadding.bottom)};this._updateScrollSize();this._currentItemSize={width:this._contentSize.width,height:this._avgItemHeight};this.refresh();this._updateItemElems();this.update()}_updateScrollSize(){let t=this;t._contentSize={width:t._clientRect.width,height:t._clientRect.height};t._scrollSize={width:0,height:t._avgItemHeight*t._currentList.length-t._clientRect.height+t._avgItemHeight};if(t._isDragActive)t._scrollSize.height+=t._scrollSizeAddition;if(t.isVerScrollVisible()){if(t._currentScrollAppearance===IntegralUIComponentAppearance.Static)t._contentSize.width-=14;if(t._scrollSize.width>0)t._scrollSize.width+=16}if(t.isHorScrollVisible())t._scrollSize.height+=16;t._scrollSize.width=Math.max(0,t._scrollSize.width);t._scrollSize.height=Math.max(0,t._scrollSize.height);t._maxScrollPos={x:t._scrollSize.width,y:t._scrollSize.height};if(t._currentScrollPos.x>t._maxScrollPos.x)t._changeHorizontalScrollPos(t._maxScrollPos.x);if(t._currentScrollPos.y>t._maxScrollPos.y)t._changeVerticalScrollPos(t._maxScrollPos.y);t._scrollBarSize={width:t.isVerScrollVisible()?t._clientRect.width-16:t._clientRect.width,height:t.isHorScrollVisible()?t._clientRect.height-16:t._clientRect.height};if(t._currentScrollAppearance===IntegralUIComponentAppearance.Static){t._scrollBarSize.width-=2;t._scrollBarSize.height-=2}else{if(t.isVerScrollVisible())t._scrollBarSize.height+=2;if(t.isHorScrollVisible())t._scrollBarSize.width+=2;if(t.isVerScrollVisible()&&t.isHorScrollVisible()){t._scrollBarSize.width+=5;t._scrollBarSize.height+=5}}t._scrollLargeChange={x:t._scrollBarSize.width,y:t._scrollBarSize.height};t._blockHoverRect={height:t._avgItemHeight-2,left:0,top:-9999999,width:t._clientRect.width-2};let e={height:t._avgItemHeight-2,left:0,top:-9999999,width:t._clientRect.width-2};if(t.isVerScrollVisible()){t._blockHoverRect.width-=16;e.width-=16;if(t._currentScrollAppearance===IntegralUIComponentAppearance.Dynamic){t._blockHoverRect.width+=5;e.width+=5}}t._blockSelectRect.forEach(t=>{t.width=e.width;t.height=e.height})}_getAppliedItemStyle(t){let e=this._commonService.getStyle(t.inlineStyle),i={...e.normal}||{};if(!this._isItemEnabled(t.data))i={...e.disabled}||{};else if(this._isItemSelected(t.data))i={...e.selected}||{};else if(this._isItemHovered(t.data))i={...e.hovered}||{};i.position="absolute";if(t.position){i.top=t.position.y+"px";i.left=t.position.x+"px"}i.width=this._currentItemSize.width+"px";return i}_getControlStyle(){let t=this._currentInlineStyle||{};t.cursor=this._ctrlCursor;t.overflow=this.virtualMode?"hidden":"auto";if(this._ctrlSize.width>0)t.width=this._ctrlSize.width+"px";if(this._ctrlSize.height>0)t.height=this._ctrlSize.height+"px";return t}_updateColorSchemeSettings(t){this._currentBaseColorSchemeSettings=css``;this._currentColorSchemeSettings=css``;this._currentItemColorSchemeSettings=css``;this._currentScrollColorSchemeSettings=css``;switch(t){case IntegralUIColorScheme.Dark:this._currentBaseColorSchemeSettings.cssText=this._commonService.replaceAll(iuiDarkStyle.cssText,"../../../icons",this._currentResourcePath);this._currentColorSchemeSettings.cssText=this._commonService.replaceAll(iuiListBoxDarkStyle.cssText,"../../../icons",this._currentResourcePath);this._currentItemColorSchemeSettings.cssText=this._commonService.replaceAll(iuiListItemDarkStyle.cssText,"../../../icons",this._currentResourcePath);this._currentScrollColorSchemeSettings.cssText=this._commonService.replaceAll(iuiScrollBarDarkStyle.cssText,"../../../icons",this._currentResourcePath);break;case IntegralUIColorScheme.Light:this._currentBaseColorSchemeSettings.cssText=this._commonService.replaceAll(iuiLightStyle.cssText,"../../../icons",this._currentResourcePath);this._currentColorSchemeSettings.cssText=this._commonService.replaceAll(iuiListBoxLightStyle.cssText,"../../../icons",this._currentResourcePath);this._currentItemColorSchemeSettings.cssText=this._commonService.replaceAll(iuiListItemLightStyle.cssText,"../../../icons",this._currentResourcePath);this._currentScrollColorSchemeSettings.cssText=this._commonService.replaceAll(iuiScrollBarLightStyle.cssText,"../../../icons",this._currentResourcePath);break;default:this._currentBaseColorSchemeSettings.cssText="";this._currentColorSchemeSettings.cssText="";this._currentItemColorSchemeSettings.cssText="";this._currentScrollColorSchemeSettings.cssText=""}}_updateThemeSettings(t){this._currentThemeSettings=css``;this._currentItemThemeSettings=css``;this._currentScrollStyleSettings=css``;switch(t){case IntegralUITheme.Office:this._currentThemeSettings.cssText=this._commonService.replaceAll(iuiListBoxOfficeStyle.cssText,"../../../icons",this._currentResourcePath);this._currentItemThemeSettings.cssText=this._commonService.replaceAll(iuiListItemOfficeStyle.cssText,"../../../icons",this._currentResourcePath);this._currentScrollStyleSettings.cssText=this._commonService.replaceAll(iuiScrollBarOfficeStyle.cssText,"../../../icons",this._currentResourcePath);break;default:this._currentThemeSettings.cssText="";this._currentItemThemeSettings.cssText="";this._currentScrollStyleSettings.cssText=this._commonService.replaceAll(iuiScrollBarStyle.cssText,"../../icons",this._currentResourcePath)}}firstUpdated(t){let e=this;e._updateReferences();setTimeout(function(){e._isHoverTemplatePresent=e.itemHoverTemplate?!0:!1;e._isSelectedTemplatePresent=e.itemSelectTemplate?!0:!1;e.updateLayout()},1)}updated(t){t.forEach((t,e)=>{});this._updateFocusItem()}_getLayoutTemplate(t,e){if("group"===t.data.type)return html`                <div data-item-content class=${classMap(t.style.content)} tabindex="${t.tabIndex}" @dblclick="${e=>this._itemDblClickEvent(e,t)}" @focus="${e=>this._itemGotFocus(t)}" @blur="${e=>this._itemLostFocus(t)}" @keydown="${e=>this._itemKeyDown(e,t)}" @keypress="${e=>this._itemKeyPress(e,t)}" @keyup="${e=>this._itemKeyUp(e,t)}" @mousedown="${e=>this._itemMouseDown(e,t)}" @touchstart="${e=>this._itemTouchStart(e,t)}">                    <div class="iui-listgroup-content-block">                        ${this.showExpandBox?html`<span class=${classMap(t.style.expandBox)} @mousedown="${e=>this._expandBoxMouseDown(e,t.data)}" @touchstart="${e=>this._expandBoxTouchStart(e,t.data)}"></span>`:html``}                        <div style="display:inline-block">                            ${this._getItemTemplate(t.data)}                        </div>                    </div>                </div>            `;else return html`                <div data-item-content class=${classMap(t.style.content)} tabindex="${t.tabIndex}" @click="${e=>this._itemClickEvent(e,t)}" @dblclick="${e=>this._itemDblClickEvent(e,t)}" @contextmenu="${e=>this._itemRightClickEvent(e,t)}" @focus="${e=>this._itemGotFocus(t)}" @blur="${e=>this._itemLostFocus(t)}" @keydown="${e=>this._itemKeyDown(e,t)}" @keypress="${e=>this._itemKeyPress(e,t)}" @keyup="${e=>this._itemKeyUp(e,t)}" @mousedown="${e=>this._itemMouseDown(e,t)}" @mousemove="${e=>this._itemMouseMove(e,t)}" @mouseup="${e=>this._itemMouseUp(e,t)}" draggable="true" @dragstart="${i=>this._itemDragStart(i,t,e)}" @dragover="${i=>this._itemDragOver(i,t,e,!0)}" @drop="${e=>this._itemDragDrop(e,t)}" @dragend="${t=>this._ctrlDragEnd(t)}" @touchstart="${e=>this._itemTouchStart(e,t)}" @touchmove="${e=>this._itemTouchMove(e,t)}" @touchend="${e=>this._itemTouchEnd(e,t)}">                    <div class="iui-listitem-content-block">                        ${this._getItemTemplate(t.data)}                    </div>                </div>            `}_getDragTemplate(t){return html`            <div class=${classMap({[this._itemClassName]:!0})}>                <div class=${classMap({[this._itemContentClassName]:!0})}>                    ${this._getItemTemplate(t.data)}                </div>            </div>        `}render(){return html`            <style>                ${iuiScrollBarStyle}                ${this._currentBaseStyleSettings}                ${this._currentBaseColorSchemeSettings}                ${this._currentScrollStyleSettings}                ${this._currentControlStyleSettings}                ${this._currentItemStyleSettings}                ${this._currentThemeSettings}                ${this._currentItemThemeSettings}                ${this._currentColorSchemeSettings}                ${this._currentItemColorSchemeSettings}                ${this._currentScrollColorSchemeSettings}                ${this._currentCustomStyle}            </style>            <div data-ctrl="listbox" class=${classMap(this._getControlClass())} style=${styleMap(this._getControlStyle())} @DOMMouseScroll="${t=>this._processMouseWheel(t)}" @mousewheel="${t=>this._processMouseWheel(t)}" @mouseenter="${t=>this._ctrlMouseEnter(t)}" @mouseleave="${t=>this._ctrlMouseLeave(t)}" @mousemove="${t=>this._onCtrlMouseMove(t)}" @dragenter="${t=>this._ctrlDragEnter(t)}" @dragleave="${t=>this._ctrlDragLeave(t)}" @dragover="${t=>this._ctrlDragOver(t)}" @drop="${t=>this._ctrlDragDrop(t)}" @dragend="${t=>this._ctrlDragEnd(t)}" @scroll="${t=>this._onScroll(t)}">                <div class=${classMap({"iui-base-loading":this._isLoading?!0:!1,"iui-base-loading-end":this._isLoadingEnd?!0:!1})}>                    <ul id="content" @touchstart="${t=>this._ctrlTouchStart(t)}" @touchend="${t=>this._ctrlTouchEnd(t)}" style=${styleMap({width:this._contentSize.width+"px",height:this._contentSize.height+"px",margin:this._isScrollListInit?"-9999px 0 0 0":0,padding:0})}>                        ${this._scrollItemList.map((t,e)=>html`                            <li data-item class=${classMap(t.style.general)} style=${styleMap(this._getAppliedItemStyle(t))} @mouseenter="${e=>this._itemMouseEnter(e,t)}" @mouseleave="${e=>this._itemMouseLeave(e,t)}">                                ${this._getLayoutTemplate(t,e)}                            </li>                        `)}                    </ul>                    ${this._isHoverTemplatePresent&&!this._isUpdateActive&&this._hoverItemObj&&this._isContentAllowed(this._hoverItemObj.data,"hover")?html`<div class="iui-listbox-block iui-listbox-block-hover" style=${styleMap({left:this._blockHoverRect.left+"px",top:this._blockHoverRect.top+"px",height:this._blockHoverRect.height+"px",width:this._blockHoverRect.width+"px"})}>                                <div style=${styleMap({height:this._blockHoverRect.height+"px"})} @mousemove="${t=>this._hoverBlockMouseMove(t)}" @mouseleave="${t=>this._hoverBlockMouseLeave(t)}">                                    ${this._getItemTemplate(this._hoverItemObj.data,"hover")}                                </div>                            </div>`:html``}                    ${this._isSelectedTemplatePresent&&!this._isUpdateActive?this._currentSelectedItems.map((t,e)=>html`<span>                                ${this._isContentAllowed(t,"select")?html`<div class="iui-listbox-block iui-listbox-block-select" style=${styleMap(this._getSelectBlockRect(e))}>                                        <div style=${styleMap({height:this._blockSelectHeight+"px"})}>                                            ${this._getItemTemplate(t,"select")}                                        </div>                                    </div>`:html``}                                </span>`):html``}                    ${this.isVerScrollVisible()?html`<iui-scrollbar id="ver-scroll" .allowAnimation="${this._isAnimationAllowed}" .appearance="${this._currentScrollAppearance}" .colorScheme="${this._currentColorScheme}" .enabled="${this.enabled}" .value="${this._currentScrollPos.y}" .max="${this._maxScrollPos.y}" .largeChange="${this._scrollLargeChange.y}" .height="${this._scrollBarSize.height}" .theme="${this._currentTheme}" .visible="${this._isScrollVisible}" @mouseenter="${t=>this._scrollMouseEnter(t)}" @valueChanged="${t=>this._onVerticalScrollChanged(t)}" @scrollStart="${t=>this._onVerticalScrollStart(t)}" @scrollEnd="${t=>this._onVerticalScrollEnd(t)}"></iui-scrollbar>`:html``}                    ${this.isHorScrollVisible()?html`<iui-scrollbar id="hor-scroll" .allowAnimation="${this._isAnimationAllowed}" .appearance="${this._currentScrollAppearance}" .colorScheme="${this._currentColorScheme}" .enabled="${this.enabled}" orientation="Horizontal" .value="${this._currentScrollPos.x}" .max="${this._maxScrollPos.x}" .width="${this._scrollBarSize.width}" .theme="${this._currentTheme}" .visible="${this._isScrollVisible}" @mouseenter="${t=>this._scrollMouseEnter(t)}" @valueChanged="${t=>this._onHorizontalScrollChanged(t)}" @scrollStart="${t=>this._onHorizontalScrollStart(t)}" @scrollEnd="${t=>this._onHorizontalScrollEnd(t)}"></iui-scrollbar>`:html``}                    ${this.isVerScrollVisible()&&this.isHorScrollVisible()?html`<div class=${classMap(this._getScrollCornerClass())}></div>`:html``}                </div>                ${this._isDragActive&&this._isCtrlDragEntered?html`<div id="drag-content" class=${classMap(this._getDragListClass())} style=${styleMap({top:this._dragListPos.top+"px",width:this._contentSize.width-2+"px"})}>                            ${this._isDragCopy?html`<span class="iui-draglist-copy" style=${styleMap({top:1===this._currentDragItems?this._dragListSize.height/2-8+"px":"3px",left:this._dragListSize.width/2-8+"px"})}></span>`:html``}                            <ul style=${styleMap({margin:0,padding:0})}>                                ${this._dragItemList.filter((t,e)=>e<this._maxDragItems).map((t,e)=>html`                                    <li class=${classMap({"iui-listitem-animate":this._isAnimationAllowed})}>                                        ${this._getDragTemplate(t)}                                    </li>                                `)}                            </ul>                            ${this._totalDragItems>this._currentDragItems?html`<div class="iui-draglist-corner">                                        <div class="iui-draglist-corner-block"></div>                                        <div class="iui-draglist-num">+${this._totalDragItems-this._currentDragItems}</div>                                    </div>`:html``}                        </div>`:html``}                ${this._isLoading?html`<div class="iui-loading-icon" style=${styleMap({top:this._loadIconPos.top+"px",left:this._loadIconPos.left+"px"})}></div>`:html``}            </div>        `}_updateControlStyleSettings(t){this._currentBaseStyleSettings=css``;this._currentBaseStyleSettings.cssText=this._commonService.replaceAll(iuiBaseDefaultStyle.cssText,"../../icons",t);this._currentControlStyleSettings=css``;this._currentControlStyleSettings.cssText=this._commonService.replaceAll(iuiListBoxDefaultStyle.cssText,"../../icons",t);this._currentItemStyleSettings=css``;this._currentItemStyleSettings.cssText=this._commonService.replaceAll(iuiListItemDefaultStyle.cssText,"../../icons",t)}_updateReferences(){this._elemRef=this.shadowRoot.querySelector("div[data-ctrl=listbox]");this._contentElem=this.shadowRoot.querySelector("#content");if(this._resizeObserver)this._resizeObserver.observe(this._elemRef)}}window.customElements.define("iui-listbox",IntegralUIListBox);export default IntegralUIListBox;